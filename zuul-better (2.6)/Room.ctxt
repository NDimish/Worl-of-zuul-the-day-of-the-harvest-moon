#BlueJ class context
comment0.target=Room
comment0.text=\r\n\ Class\ Room\ -\ a\ room\ in\ an\ adventure\ game.\r\n\r\n\ This\ class\ is\ part\ of\ the\ "World\ of\ Zuul"\ application.\ \r\n\ "World\ of\ Zuul"\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\ \ \r\n\r\n\ A\ "Room"\ represents\ one\ location\ in\ the\ scenery\ of\ the\ game.\ \ It\ is\ \r\n\ connected\ to\ other\ rooms\ via\ exits.\ \ For\ each\ existing\ exit,\ the\ room\ \r\n\ stores\ a\ reference\ to\ the\ neighboring\ room.\r\n\ \r\n\ @author\ \ Michael\ K\u00F6lling\ and\ David\ J.\ Barnes\r\n\ @version\ 2016.02.29\r\n
comment1.params=description
comment1.target=Room(java.lang.String)
comment1.text=\r\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\r\n\ no\ exits.\ "description"\ is\ something\ like\ "a\ kitchen"\ or\r\n\ "an\ open\ court\ yard".\r\n\ @param\ description\ The\ room's\ description.\r\n
comment10.params=person
comment10.target=void\ minusRoomCharacter(java.lang.String)
comment10.text=\r\n\ takes\ away\ single\ character\ to\ the\ room\r\n
comment11.params=
comment11.target=void\ Resetroom()
comment11.text=\r\n\ Resets\ staus\ of\ items\ and\ characters\ in\ room\r\n
comment12.params=direction\ neighbor
comment12.target=void\ setExit(java.lang.String,\ Room)
comment12.text=\r\n\ Define\ an\ exit\ from\ this\ room.\r\n\ @param\ direction\ The\ direction\ of\ the\ exit.\r\n\ @param\ neighbor\ \ The\ room\ to\ which\ the\ exit\ leads.\r\n
comment13.params=
comment13.target=java.lang.String\ getShortDescription()
comment13.text=\r\n\ @return\ The\ short\ description\ of\ the\ room\r\n\ (the\ one\ that\ was\ defined\ in\ the\ constructor).\r\n
comment14.params=
comment14.target=java.lang.String\ getLongDescription()
comment14.text=\r\n\ Return\ a\ description\ of\ the\ room\ in\ the\ form\:\r\n\ \ \ \ \ You\ are\ in\ the\ kitchen.\r\n\ \ \ \ \ Exits\:\ north\ west\r\n\ @return\ A\ long\ description\ of\ this\ room\r\n
comment15.params=
comment15.target=java.lang.String\ getExitString()
comment15.text=\r\n\ Return\ a\ string\ describing\ the\ room's\ exits,\ for\ example\r\n\ "Exits\:\ north\ west".\r\n\ @return\ Details\ of\ the\ room's\ exits.\r\n
comment16.params=direction
comment16.target=Room\ getExit(java.lang.String)
comment16.text=\r\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\r\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\r\n\ @param\ direction\ The\ exit's\ direction.\r\n\ @return\ The\ room\ in\ the\ given\ direction.\r\n
comment17.params=change
comment17.target=void\ setAbility(boolean)
comment17.text=\r\n\ Sets\ if\ the\ room\ has\ an\ active\ ability\r\n
comment18.params=
comment18.target=boolean\ getAbility()
comment18.text=\r\n\ See\ if\ the\ room\ has\ an\ active\ ability\r\n
comment19.params=change
comment19.target=void\ addVisable(int)
comment19.text=\r\n\ Sets\ if\ the\ room\ has\ an\ active\ ability\r\n
comment2.params=
comment2.target=java.lang.String\ seeRoomItems()
comment2.text=\r\n\ Output\ items\ in\ the\ room\r\n
comment20.params=
comment20.target=int\ getVisable()
comment20.text=\r\n\ Sets\ if\ the\ room\ has\ an\ active\ ability\r\n
comment21.params=
comment21.target=void\ update()
comment21.text=\r\n\ Update.\ Incase\ the\ item\ names\ change\ we\ update\ them\ after\ every\ use\ command\r\n
comment22.params=x
comment22.target=void\ setLock(boolean)
comment22.text=\r\n\ set\ lock\ status\r\n
comment23.params=
comment23.target=boolean\ getLock()
comment23.text=\r\n\ Ger\ lock\ status\r\n
comment3.params=
comment3.target=java.lang.String\ seeRoomCharacters()
comment3.text=\r\n\ Output\ items\ in\ the\ room\r\n
comment4.params=item
comment4.target=Items\ useItem(java.lang.String)
comment4.text=\r\n\ gives\ item\ from\ room\ if\ possible\r\n
comment5.params=person
comment5.target=Character\ findCharacters(java.lang.String)
comment5.text=\r\n\ gives\ character\ from\ room\ if\ possible\r\n
comment6.params=m_roomItems
comment6.target=void\ addRoomItems(java.util.ArrayList)
comment6.text=\r\nPuts\ many\ items\ in\ the\ room\r\n\ @param\ description\ The\ room's\ description.\r\n
comment7.params=item
comment7.target=void\ addRoomItems(Items)
comment7.text=\r\n\ Add\ single\ item\ to\ the\ room\r\n
comment8.params=person
comment8.target=void\ addRoomCharacter(Character)
comment8.text=\r\n\ Add\ single\ character\ to\ the\ room\r\n
comment9.params=item
comment9.target=Items\ minusRoomItems(java.lang.String)
comment9.text=\r\n\ Takes\ away\ item\ from\ room\r\n
numComments=24
